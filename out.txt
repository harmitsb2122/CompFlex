line no is 1
STRUCT : struct
Identifier : LinkedList 
line no is 2
{ : {
line no is 3
INT : int
* : *
Identifier : data 
;: ;
line no is 4
STRUCT : struct
Identifier : LinkedList 
* : *
Identifier : next 
;: ;
line no is 5
} : }
;: ;
line no is 6
line no is 7
INT : int
Identifier : a 
;: ;
line no is 8
INT : int
Identifier : main 
( : (
) : )
line no is 9
{ : {
line no is 10
STRUCT : struct
Identifier : LinkedList 
* : *
Identifier : k 
;: ;
line no is 11
STRUCT : struct
Identifier : LinkedList 
* : *
Identifier : k1 
;: ;
line no is 12
Identifier : k 
-> : ->
Identifier : data 
= : =
MALLOC : malloc
( : (
I CONST: (40)
) : )
;: ;
COMPILETIME WARNING: assigning int to *LinkedList
At line : 13
line no is 13
Identifier : k 
-> : ->
Identifier : next 
= : =
Identifier : k1 
;: ;
line no is 14
line no is 15
LMFUNCTION : function
< : <
INT : int
( : (
STRUCT : struct
Identifier : LinkedList 
* : *
) : )
> : >
Identifier : recurse 
= : =
[ : [
& : &
] : ]
( : (
STRUCT : struct
Identifier : LinkedList 
* : *
Identifier : z 
) : )
line no is 16
{ : {
line no is 17
IF : if
( : (
Identifier : z 
-> : ->
Identifier : next 
EQ_OP : ==
VAR : NULL
) : )
line no is 18
{ : {
line no is 19
RETURN : return
VAR : NULL
;: ;
line no is 20
} : }
line no is 21
RETURN : return
Identifier : recurse 
( : (
Identifier : z 
-> : ->
Identifier : next 
) : )
;: ;
line no is 22
} : }
;: ;
line no is 23
RETURN : return
I CONST: (0)
;: ;
line no is 24
} : }
Struct Name = main
	Attributes = 
				Name	DataType	Scope	pointer	
				LinkedList.data		*int			0		
				LinkedList.next		*LinkedList			0		
				LinkedList		struct			0		data*next*
				a		int			0		
	Constants = 
				Name	DataType	Scope	pointer	
	Functions = 

		function Name = main
			label = label_1
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
			localVariables : 
				Name	DataType	Scope	pointer	
				k		*LinkedList			2		
				k1		*LinkedList			2		
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t1		int			2		
				_t2		int			2		
				_t7		int			2		
			Code = 
				label_1:
				_t1_2 = #40
				memory _t2_2 _t1_2 #1
				k.data_2 = _t2_2
				k.next_2 = k1_2
				_t7_2 = #0
				Return _t7_2

		function Name = recurse
			label = label_2
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
				z		*LinkedList			3		
			localVariables : 
				Name	DataType	Scope	pointer	
				k		*LinkedList			2		
				k1		*LinkedList			2		
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t3		int			3		
				_t4		bool			3		
				_t5		int			4		
				_t6		int			3		
			Code = 
				label_2:
				_t3_3 = #0
				_t4_3 = z.next_3 == _t3_3
				if ( _t4_3 == #0 ) goto label_3
				_t5_4 = #0
				Return _t5_4
				goto label_4
				label_3:
				label_4:
				FunctionCall recurse
				param z.next_3
				call label_2
				label_5:
				_t6_3 = ReturnVal
				Return _t6_3
