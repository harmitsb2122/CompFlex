INT : int
Identifier : f 
( : (
INT : int
Identifier : a 
, : ,
INT : int
Identifier : b 
) : )
line no is 1
{ : {
line no is 2
RETURN : return
Identifier : f 
( : (
Identifier : a 
+ : +
Identifier : b 
, : ,
Identifier : a 
) : )
;: ;
line no is 3
} : }
line no is 4
line no is 5
INT : int
Identifier : a 
;: ;
line no is 6
STRUCT : struct
line no is 7
{ : {
line no is 8
INT : int
Identifier : a 
;: ;
line no is 9
CHAR : char
Identifier : c 
;: ;
line no is 10
} : }
Identifier : my 
;: ;
line no is 11
line no is 12
INT : int
Identifier : main 
( : (
) : )
line no is 13
{ : {
line no is 14
INT : int
Identifier : a 
, : ,
Identifier : b 
;: ;
line no is 15
INT : int
* : *
Identifier : k 
;: ;
line no is 16
INT : int
Identifier : c 
[ : [
I CONST: (10)
] : ]
[ : [
I CONST: (2)
] : ]
;: ;
line no is 17
Identifier : c 
[ : [
I CONST: (2)
] : ]
= : =
Identifier : k 
;: ;
line no is 18
Identifier : a 
= : =
I CONST: (1)
;: ;
line no is 19
Identifier : a 
= : =
- : -
I CONST: (1)
;: ;
line no is 20
Identifier : b 
= : =
I CONST: (1)
;: ;
line no is 21
Identifier : f 
( : (
Identifier : a 
, : ,
Identifier : b 
) : )
;: ;
line no is 22
INT : int
* : *
Identifier : d 
;: ;
line no is 23
Identifier : d 
= : =
MALLOC : malloc
( : (
I CONST: (40)
) : )
;: ;
COMPILETIME WARNING: assigning int to *int
At line : 24
line no is 24
INT : int
Identifier : i 
, : ,
Identifier : n 
;: ;
line no is 25
Identifier : n 
= : =
I CONST: (10)
;: ;
line no is 26
FOR : for
( : (
Identifier : i 
= : =
I CONST: (0)
;: ;
Identifier : i 
< : <
Identifier : n 
;: ;
Identifier : i 
INC_OP : ++
) : )
line no is 27
{ : {
line no is 28
Identifier : a 
= : =
Identifier : a 
+ : +
Identifier : b 
;: ;
line no is 29
IF : if
( : (
Identifier : a 
EQ_OP : ==
I CONST: (1)
) : )
line no is 30
{ : {
line no is 31
CONTINUE : continue
;: ;
line no is 32
} : }
line no is 33
ELSE : else
line no is 34
{ : {
line no is 35
BREAK : break
;: ;
line no is 36
} : }
line no is 37
} : }
line no is 38
RETURN : return
I CONST: (0)
;: ;
line no is 39
} : }
Struct Name = main
	Attributes = 
				Name	DataType	Scope	pointer	
				a		int			0		
				my.a		int			0		
				my.c		char			0		
				my		struct			0		my.a*my.c*
	Constants = 
				Name	DataType	Scope	pointer	
	Functions = 

		function Name = f
			label = label_1
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
				a		int			2		
				b		int			2		
			localVariables : 
				Name	DataType	Scope	pointer	
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t1		int			2		
				_t2		int			2		
			Code = 
				label_1:
				FunctionCall f
				_t1_2 = a_2 + b_2
				param _t1_2
				param a_2
				call label_1
				label_2:
				_t2_2 = ReturnVal
				Return _t2_2

		function Name = main
			label = label_3
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
			localVariables : 
				Name	DataType	Scope	pointer	
				a		int			3		
				b		int			3		
				k		*int			3		
				c_0		int			3		
				c_1		int			3		
				c		**int			3		c_0*c_1*
				d		*int			3		
				i		int			3		
				n		int			3		
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t3		int			3		
				_t4		int			3		
				_t5		int			3		
				_t6		int			3		
				_t7		**int			3		
				_t8		int			3		
				_t9		int			3		
				_t10		int			3		
				_t11		int			3		
				_t12		int			3		
				_t13		int			3		
				_t14		int			3		
				_t15		int			3		
				_t16		int			4		
				_t17		bool			4		
				_t18		int			4		
				_t19		int			4		
				_t20		int			4		
				_t21		bool			4		
				_t22		int			3		
			Code = 
				label_3:
				_t3_3 = #10
				_t4_3 = #2
				c_0_3 = _t3_3
				c_1_3 = _t4_3
				memory c_3 _t3_3 #4
				_t5_3 = #2
				_t6_3 = _t5_3 * #0
				_t7_3 = c_3 + _t6_3
				*_t7_3 = k_3
				_t8_3 = #1
				a_3 = _t8_3
				_t9_3 = #1
				_t10_3 = minus _t9_3
				a_3 = _t10_3
				_t11_3 = #1
				b_3 = _t11_3
				FunctionCall f
				param a_3
				param b_3
				call label_1
				label_4:
				_t12_3 = ReturnVal
				_t13_3 = #40
				memory _t14_3 _t13_3 #1
				d_3 = _t14_3
				_t15_3 = #10
				n_3 = _t15_3
				_t16_4 = #0
				i_3 = _t16_4
				label_5:
				_t17_4 = i_3 < n_3
				if ( _t17_4 == #0 ) goto label_8
				goto label_6
				label_7:
				_t18_4 = i_3
				i_3 = i_3 + #1
				goto label_5
				label_6:
				_t19_4 = a_3 + b_3
				a_3 = _t19_4
				_t20_4 = #1
				_t21_4 = a_3 == _t20_4
				if ( _t21_4 == #0 ) goto label_9
				goto label_7
				goto label_10
				label_9:
				goto label_8
				label_10:
				goto label_7
				label_8:
				_t22_3 = #0
				Return _t22_3
