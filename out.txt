INT : int
Identifier : f 
( : (
INT : int
Identifier : a 
) : )
line no is 1
{ : {
line no is 2
INT : int
Identifier : k 
;: ;
line no is 3
RETURN : return
Identifier : a 
;: ;
line no is 4
} : }
line no is 5
INT : int
Identifier : main 
( : (
) : )
line no is 6
{ : {
line no is 7
INT : int
Identifier : a 
;: ;
line no is 8
Identifier : a 
= : =
I CONST: (1)
;: ;
line no is 9
LMFUNCTION : function
< : <
INT : int
( : (
INT : int
, : ,
INT : int
) : )
> : >
Identifier : fi 
= : =
[ : [
& : &
] : ]
( : (
INT : int
Identifier : a 
, : ,
INT : int
Identifier : b 
) : )
line no is 10
{ : {
line no is 11
INT : int
Identifier : c 
[ : [
I CONST: (10)
] : ]
;: ;
line no is 12
Identifier : c 
[ : [
I CONST: (7)
] : ]
= : =
Identifier : a 
+ : +
Identifier : b 
;: ;
line no is 13
line no is 14
RETURN : return
Identifier : c 
[ : [
I CONST: (7)
] : ]
;: ;
line no is 15
} : }
;: ;
line no is 16
INT : int
Identifier : j 
;: ;
line no is 17
Identifier : j 
= : =
I CONST: (1)
;: ;
line no is 18
line no is 19
Identifier : fi 
( : (
I CONST: (0)
, : ,
I CONST: (1)
) : )
;: ;
line no is 20
RETURN : return
I CONST: (0)
;: ;
line no is 21
} : }
Struct Name = main
	Attributes = 
				Name	DataType	Scope	pointer	
	Constants = 
				Name	DataType	Scope	pointer	
	Functions = 

		function Name = f
			label = label_1
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
				a		int			2		
			localVariables : 
				Name	DataType	Scope	pointer	
				k		int			2		
			tempVariables = 
				Name	DataType	Scope	pointer	
			Code = 
				label_1:
				Return a_2

		function Name = main
			label = label_2
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
			localVariables : 
				Name	DataType	Scope	pointer	
				a		int			3		
				j		int			3		
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t1		int			3		
				_t10		int			3		
				_t11		int			3		
				_t12		int			3		
				_t13		int			3		
				_t14		int			3		
			Code = 
				label_2:
				_t1_3 = #1
				a_3 = _t1_3
				_t10_3 = #1
				j_3 = _t10_3
				FunctionCall fi
				_t11_3 = #0
				param _t11_3
				_t12_3 = #1
				param _t12_3
				call label_3
				label_4:
				_t13_3 = ReturnVal
				_t14_3 = #0
				Return _t14_3

		function Name = fi
			label = label_3
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
				a		int			4		
				b		int			4		
			localVariables : 
				Name	DataType	Scope	pointer	
				c_0		*int			4		
				c		*int			4		c_0*
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t2		int			4		
				_t3		int			4		
				_t4		int			4		
				_t5		*int			4		
				_t6		int			4		
				_t7		int			4		
				_t8		int			4		
				_t9		*int			4		
			Code = 
				label_3:
				_t2_4 = #10
				c_0_4 = _t2_4
				memory c_4 _t2_4 #4
				_t3_4 = #7
				_t4_4 = _t3_4 * #4
				_t5_4 = c_4 + _t4_4
				_t6_4 = a_4 + b_4
				*_t5_4 = _t6_4
				_t7_4 = #7
				_t8_4 = _t7_4 * #4
				_t9_4 = c_4 + _t8_4
				Return *_t9_4
