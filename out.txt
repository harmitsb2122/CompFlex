INT : int
Identifier : f 
( : (
INT : int
Identifier : a 
, : ,
INT : int
Identifier : b 
) : )
line no is 1
{ : {
line no is 2
RETURN : return
Identifier : f 
( : (
Identifier : a 
+ : +
Identifier : b 
, : ,
Identifier : a 
) : )
;: ;
line no is 3
} : }
line no is 4
line no is 5
INT : int
Identifier : a 
;: ;
line no is 6
STRUCT : struct
line no is 7
{ : {
line no is 8
INT : int
Identifier : a 
;: ;
line no is 9
INT : int
Identifier : b 
;: ;
line no is 10
} : }
Identifier : my 
*** a
*** my.a
*** a
*** my.a
*** my.b
;: ;
line no is 11
line no is 12
INT : int
Identifier : main 
( : (
) : )
line no is 13
{ : {
line no is 14
STRUCT : struct
Identifier : my 
;: ;
line no is 15
Identifier : my.c 
COMPILETIME ERROR: my.c not declared
At line : 16
Struct Name = main
	Attributes = 
				Name	DataType	Scope	pointer	
				a		int			0		
				my.a		int			0		
				my.b		int			0		
				my		struct			0		my.a*my.b*
	Constants = 
				Name	DataType	Scope	pointer	
	Functions = 

		function Name = f
			label = label_1
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
				a		int			2		
				b		int			2		
			localVariables : 
				Name	DataType	Scope	pointer	
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t1		int			2		
				_t2		int			2		
			Code = 
				label_1:
				FunctionCall f
				_t1_2 = a_2 + b_2
				param _t1_2
				param a_2
				call label_1
				label_2:
				_t2_2 = ReturnVal
				Return _t2_2

		function Name = main
			label = label_3
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
			localVariables : 
				Name	DataType	Scope	pointer	
				my		struct			3		
			tempVariables = 
				Name	DataType	Scope	pointer	
			Code = 
				label_3:
Error = -1
