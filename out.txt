Struct Name = main
	Attributes = 
				Name	DataType	Scope	pointer	
				LinkedList.data		*int			0		
				LinkedList.next		*LinkedList			0		
				LinkedList		struct			0		data*next*
				a		int			0		
	Constants = 
				Name	DataType	Scope	pointer	
	Functions = 

		function Name = main
			label = label_1
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
			localVariables : 
				Name	DataType	Scope	pointer	
				k		*LinkedList			2		
				k1		*LinkedList			2		
				p		int			2		
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t1		int			2		
				_t2		*int			2		
				_t7		int			2		
				_t8		int			2		
			Code = 
				label_1:
				_t1_2 = #10
				p_2 = _t1_2
				memory _t2_2 p_2 #1
				k.data_2 = _t2_2
				k.next_2 = k1_2
				FunctionCall recurse
				param k_2
				call label_2
				label_6:
				_t7_2 = ReturnVal
				_t8_2 = #0
				Return _t8_2

		function Name = recurse
			label = label_2
			return value : int
			parameters : 
				Name	DataType	Scope	pointer	
				z		*LinkedList			3		
			localVariables : 
				Name	DataType	Scope	pointer	
				k		*LinkedList			2		
				k1		*LinkedList			2		
				p		int			2		
			tempVariables = 
				Name	DataType	Scope	pointer	
				_t3		int			3		
				_t4		bool			3		
				_t5		int			4		
				_t6		int			3		
			Code = 
				label_2:
				_t3_3 = #0
				_t4_3 = z.next_3 == _t3_3
				if ( _t4_3 == #0 ) goto label_3
				_t5_4 = #0
				Return _t5_4
				goto label_4
				label_3:
				label_4:
				FunctionCall recurse
				param z.next_3
				call label_2
				label_5:
				_t6_3 = ReturnVal
				Return _t6_3
